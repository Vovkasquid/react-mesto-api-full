{"version":3,"sources":["components/PopupWithForm.js","components/ImagePopup.js","contexts/CurrentUserContext.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","components/ProtectedRoute.js","components/Card.js","images/logo_mesto.svg","components/Header.js","components/Footer.js","components/Main.js","components/AuthComponent.js","components/Login.js","components/Register.js","images/auth-success.svg","images/auth-failed.svg","components/InfoTooltip.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["PopupWithForm","name","title","isOpen","onClose","children","buttonText","onSubmit","className","type","onClick","ImagePopup","card","src","link","alt","CurrentUserContext","React","createContext","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","currentUser","useContext","useEffect","about","editProfilePopupChildren","id","placeholder","required","minLength","maxLength","value","onChange","event","target","preventDefault","EditAvatarPopup","onUpdateAvatar","inputRef","createRef","editAvatarPopupChildren","ref","current","AddPlacePopup","onAddPlace","place","setPlace","setLink","addPlacePopupChildren","api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","method","authorization","localStorage","getItem","then","_checkResponse","userName","userAbout","body","JSON","stringify","userAvatar","avatar","placeName","pictureLink","cardID","isLiked","addLike","removeLike","ProtectedRoute","Component","component","props","loggedIn","to","Card","onCardClick","onCardLike","onCardDelete","isThisCardMine","_id","owner","cardLikeButtonClassName","likes","some","i","toString","length","Header","textButton","userEmail","headerHandler","logo","Footer","Date","getFullYear","Main","onEditProfile","onEditAvatar","cards","email","style","backgroundImage","map","AuthComponent","isLogin","handlerSubmit","buttonTitle","password","data","setData","handleChange","e","Login","handlerLogin","Register","handlerRegister","InfoToolTip","isSucces","succesPic","failPic","BASE_URL","handleResponse","response","App","history","useHistory","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoggedIn","setEmail","isRegisterPopupOpen","setIsRegisterPopupOpen","isSuccessRegister","setIsSuccessRegister","all","getUserInformation","getInitialCards","userData","cardsList","reverse","catch","err","console","log","tokenCheck","closeAllPopups","token","jwt","push","Provider","path","auth","setItem","exact","changeLikeCardStatus","newCard","state","c","removeCard","filter","removeItem","editProfile","editAvatar","addCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cbdc697.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction PopupWithForm({name, title, isOpen, onClose, children, buttonText, onSubmit}) {\n  // В children автоматически вставится код\n  // Который будет указан между тегами компонента в App\n  return (\n    <div className={`${isOpen && `popup_status_active`} popup edit-form edit-form_type_${name}`}>\n      <form name={name + \"EditForm\"} className=\"edit-form__form-container\" onSubmit={onSubmit}>\n        <h2 className=\"edit-form__form-description\">{title}</h2>\n        {children}\n        <button aria-label={buttonText} type=\"submit\" className={`edit-form__submit-button edit-form__submit-button_type_${name}`}>{buttonText}</button>\n        <button aria-label=\"Закрыть\" type=\"button\" className={`popup__close-btn edit-form__close-button edit-form__close-button_type_${name}`} onClick={onClose}></button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","function ImagePopup({card, onClose}) {\n  return (\n    <div className={`popup image-popup ${card && `popup_status_active`}`}>\n      <div className=\"image-popup__container\">\n        <img src={card?.link} alt={card?.name} className=\"image-popup__picture\"/>\n        <p className=\"image-popup__description\">{card?.name}</p>\n        <button aria-label=\"Закрыть\" type=\"button\" className=\"popup__close-btn image-popup__close-button\" onClick={onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\n//Создаём объект контекста и экспортируй его\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n  //Переменные состояния для управляемых инпутов\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  //Подписываемся на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  //Обработчики введённых данных\n  function onChangeName(event) {\n    setName(event.target.value);\n  }\n\n  function onChangeDescription(event) {\n    setDescription(event.target.value);\n  }\n\n  //Обработчик сабмита\n  function handleSubmit(event) {\n    // Запрещаем браузеру переходить по адресу формы\n    event.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser(name, description);\n  }\n\n  //Константа с наполнением компонента\n  const editProfilePopupChildren = (\n    <>\n      <input type=\"text\" name=\"editProfileName\" id=\"name-input\" className=\"edit-form__info-input edit-form__info-input_type_name\" placeholder=\"Имя\"  required minLength=\"2\" maxLength=\"40\" value={name || ''} onChange={onChangeName}/>\n      <span className=\"edit-form__error-text name-input-error\"></span>\n      <input type=\"text\" name=\"editProfileDescription\" id=\"description-input\" className=\"edit-form__info-input edit-form__info-input_type_description\" placeholder=\"Описание\"  required minLength=\"2\" maxLength=\"200\" value={description || ''} onChange={onChangeDescription}/>\n      <span className=\"edit-form__error-text description-input-error\"></span>\n    </>\n  );\n\n  return (\n    <PopupWithForm name='profile' title='Редактировать профиль' isOpen={isOpen} onClose={onClose} buttonText={'Сохранить'} onSubmit={handleSubmit}>\n      {editProfilePopupChildren}\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\n  //Создаём ref для инпута\n  const inputRef = React.createRef();\n\n  //Переменная, для наполнения разметки\n  const editAvatarPopupChildren = (\n    <>\n      <input type=\"url\" ref={inputRef} name=\"editLinkAvatar\" id=\"url-input-avatar\" className=\"edit-form__info-input edit-form__info-input_type_link\" placeholder=\"Ссылка на аватар\"  required/>\n      <span className=\"edit-form__error-text url-input-avatar-error\"></span>\n    </>\n  );\n\n  //Выставляем правильные данные при закрытии попапа\n  const onCloseHandler = () => {\n    inputRef.current.value = '';\n    onClose();\n  }\n\n  //Обработчик самбима аватары\n  function handleSubmit(event) {\n    event.preventDefault();\n    //Дёргаем колбек обновления аватары\n    onUpdateAvatar(inputRef.current.value);\n    //Очищаем поле после закрытия\n    inputRef.current.value = '';\n  }\n\n  return (\n    <PopupWithForm name='avatar' title='Обновить аватар' isOpen={isOpen} onClose={onCloseHandler} buttonText={'Сохранить'} onSubmit={handleSubmit}>\n      {editAvatarPopupChildren}\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\n  //Объявляем стейты для управляемых инпутов\n  const [place, setPlace] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  //Обработчики управляемого импута\n  function onPlaceChange(event) {\n    setPlace(event.target.value);\n  }\n\n  function onLinkChange(event) {\n    setLink(event.target.value);\n  }\n\n  //Объявляем константу для пропсов PopupWithForm\n  const addPlacePopupChildren = (\n    <>\n      <input type=\"text\" name=\"editPlaceName\" id=\"place-input\" className=\"edit-form__info-input edit-form__info-input_type_place\" placeholder=\"Название\"  required minLength=\"2\" maxLength=\"30\"  value={place || ''} onChange={onPlaceChange}/>\n      <span className=\"edit-form__error-text place-input-error\"></span>\n      <input type=\"url\" name=\"editLinkPlace\" id=\"url-input\" className=\"edit-form__info-input edit-form__info-input_type_link\" placeholder=\"Ссылка на картинку\"  required  value={link || ''} onChange={onLinkChange}/>\n      <span className=\"edit-form__error-text url-input-error\"></span>\n    </>\n  );\n\n  //Обработчик сабмита\n  function handleSubmit(event) {\n    // Запрещаем браузеру переходить по адресу формы\n    event.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onAddPlace(place, link);\n    //Очищаем поля\n    setPlace('');\n    setLink('');\n  }\n\n  //Выставляем правильные данные при закрытии попапа\n  const onCloseHandler = () => {\n    setPlace('');\n    setLink('');\n    onClose();\n  }\n\n  return (\n    <PopupWithForm name='place' title='Новое место' isOpen={isOpen} onClose={onCloseHandler} buttonText={'Сохранить'} onSubmit={handleSubmit}>\n      {addPlacePopupChildren}\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","class Api {\n\n  constructor({baseUrl, headers}) {\n  this._baseUrl = baseUrl;\n  this._headers = headers;\n  }\n\n  //Метод для проверки ответа\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    //Если условие не выполнено, то делаем промис с ошибкой\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getUserInformation() {\n    //Получаем Промис с данными от сервера\n    return fetch(`${this._baseUrl}/users/me`,{\n      method: 'GET',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n      },\n    })\n      .then(this._checkResponse);\n  }\n\n  editProfile(userName, userAbout) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: userName,\n        about: userAbout\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  editAvatar(userAvatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar `, {\n      method: 'PATCH',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: userAvatar\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  addCard(placeName, pictureLink) {\n    return fetch(`${this._baseUrl}/cards `, {\n      method: 'POST',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: placeName,\n        link: pictureLink\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  removeCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  addLike(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  removeLike(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardID, isLiked) {\n    //Либо ставим лайк, либо снимаем его\n    return isLiked ? this.addLike(cardID) : this.removeLike(cardID) ;\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://api.mestosquid.nomoredomains.club',\n\n});\n\nexport default api;\n","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\n  return (\n    <Route>\n      {\n        () => props.loggedIn === true ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\n      }\n    </Route>\n)}\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\n  const currentUser = React.useContext(CurrentUserContext);\n  //Вытаскиваем данные пользователя из контекста\n  const userInfo = currentUser;\n  //Проверяем наша ли карточка\n  const isThisCardMine = userInfo._id === card.owner;\n  //Проверяем есть ли наш лайк\n  const isLiked = card.likes.some(i => toString(i._id) === toString(currentUser._id));\n  const cardLikeButtonClassName = isLiked ? `card__like-button card__like-button_status_active` : `card__like-button`;\n\n  return (\n    <li className=\"card\">\n      <img src={card.link} alt={card.name} className=\"card__photo\" onClick={() => onCardClick(card)}/>\n      <div className=\"card__info\">\n        <h2 className=\"card__description\">{card.name}</h2>\n        <div className=\"card__like-container\">\n          <button aria-label=\"Нравится\" type=\"button\" className={cardLikeButtonClassName} onClick={() => onCardLike(card)}></button>\n          <p className=\"card__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n      {isThisCardMine && (<button aria-label=\"Удалить место\" type=\"button\" className=\"card__delete-button\" onClick={() => onCardDelete(card)}></button>)}\n    </li>\n  );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/logo_mesto.bad0f45a.svg\";","import logo from '../images/logo_mesto.svg';\n\nfunction Header({loggedIn, textButton, userEmail, headerHandler}) {\n  return (\n    <header className=\"header page__header\">\n      <img src={logo} alt=\"Логотип соцсети Место\" className=\"logo\"/>\n      <div className=\"header__info-block\">\n        <p className=\"header__user-email\">{userEmail || ''}</p>\n        <button\n          aria-label={textButton}\n          className={loggedIn ? \"header__universal-button header__universal-button_color_grey\" : \"header__universal-button\"}\n          onClick={headerHandler}\n        >\n          {textButton}\n        </button>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; {(new Date()).getFullYear()} Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport Footer from './Footer';\n\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete, headerHandler, email}) {\n  //Подписываемся на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <>\n      <Header\n        loggedIn={true}\n        textButton={'Выйти'}\n        userEmail={email}\n        headerHandler={headerHandler}\n      />\n      <main className=\"content\">\n        <section className=\"profile\">\n          <div className=\"profile__person\">\n            <div className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})`}} >\n              <div className=\"profile__overlay\" onClick={onEditAvatar}></div>\n            </div>\n            <div className=\"profile__info\">\n              <div className=\"profile__name-container\">\n                <h1 className=\"profile__name\">{currentUser.name}</h1>\n                <button aria-label=\"Редактировать профиль\" type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\n              </div>\n              <p className=\"profile__description\">{currentUser.about}</p>\n            </div>\n          </div>\n          <button aria-label=\"Добавить новое фото\" type=\"button\" className=\"profile__new-photo-button\" onClick={onAddPlace}></button>\n        </section>\n\n        <section className=\"content-gallery\">\n          <ul className=\"content-gallery__cards\">\n            {cards.map((card) => {\n              return (\n                <Card card={card} key={card._id} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete}/>\n              );\n            })}\n          </ul>\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default Main;\n","import {useState} from 'react';\nimport Header from \"./Header\";\n\n//Чтобы не дублировать практически одинакоый код в Login и Register\n//Делаем этот компонент\nfunction AuthComponent({isLogin, headerHandler, handlerSubmit, title, buttonTitle, children}) {\n  //Стейт для сбора данных с формы\n  const [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n\n  //Обработчик сбора данных с инпутов\n  const handleChange = (e) => {\n    //Вытаскиваем из таргета имя поля и значение\n    const {name, value} = e.target;\n    //Обновляем стейт с данным\n    setData({\n      ...data,\n      [name]: value\n    })\n  }\n\n  //Обработчик сабмита формы\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    handlerSubmit(data.password, data.email);\n  }\n  return (\n    <>\n      <Header\n        textButton={isLogin ? 'Регистрация' : 'Войти' }\n        headerHandler={headerHandler}\n      />\n      <section className=\"auth page__auth\">\n        <h1 className=\"auth__header\">{title}</h1>\n        <form onSubmit={formSubmitHandler} name='authorization' className=\"auth__form\">\n          <input type=\"email\" name=\"email\" id=\"email-input-login\" className=\"auth__input\" placeholder=\"Email\" value={data.email} onChange={handleChange} required/>\n          <input type=\"password\" name=\"password\" id=\"password-input-login\" className=\"auth__input\" placeholder=\"Пароль\" value={data.password} onChange={handleChange} required/>\n          <button aria-label={buttonTitle} type=\"submit\" className={`auth__button`}>{buttonTitle}</button>\n          {children}\n        </form>\n      </section>\n    </>\n  );\n}\n\nexport default AuthComponent;\n","import React from 'react';\nimport AuthComponent from './AuthComponent';\n\n//Компонент для логина пользователя\nfunction Login({headerHandler, handlerLogin}) {\n  //Ниже передадим компоненту не стейт, а просто переменную, чтобы он правильно отрендерил компонент\n  //Компонент будет не динамическим, а статистическим и включать по роуту. Его перерисовывать не надо\n  return (\n    <AuthComponent\n      isLogin={true}\n      headerHandler={headerHandler}\n      handlerSubmit={handlerLogin}\n      title={'Вход'}\n      buttonTitle={'Войти'}\n    />\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport AuthComponent from './AuthComponent';\nimport {Link} from 'react-router-dom';\n\n//Компонент для логина пользователя\nfunction Register({headerHandler, handlerRegister}) {\n  //Ниже передадим компоненту не стейт, а просто переменную, чтобы он правильно отрендерил компонент\n  //Компонент будет не динамическим, а статистическим и включать по роуту. Его перерисовывать не надо\n  return (\n    <AuthComponent\n      isLogin={false}\n      headerHandler={headerHandler}\n      handlerSubmit={handlerRegister}\n      title={'Регистрация'}\n      buttonTitle={'Зарегестрироваться'}\n    >\n      {<p className='auth__answer-text'>Уже зарегистрированы? <Link to='/sign-in' className='auth__link'>Войти</Link></p>}\n    </AuthComponent>\n  );\n}\n\nexport default Register;\n","export default __webpack_public_path__ + \"static/media/auth-success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/auth-failed.df8eddf6.svg\";","import succesPic from '../images/auth-success.svg';\nimport failPic from '../images/auth-failed.svg';\n\nfunction InfoToolTip({isOpen, isSucces, onClose}) {\n  return (\n    <div className={isOpen ? `popup info-tool-tip-popup popup_status_active` : `popup info-tool-tip-popup`}>\n      <div className=\"info-tool-tip-popup__container\">\n        <img src={isSucces ? succesPic : failPic} alt=\"Картинка успешной авторизации\" className=\"info-tool-tip-popup__picture\"/>\n        <p className=\"info-tool-tip-popup__description\">{isSucces ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}</p>\n        <button aria-label=\"Закрыть\" type=\"button\" className=\"popup__close-btn info-tool-tip-popup__close-button\" onClick={onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoToolTip;\n","export const BASE_URL = 'api.mestosquid.nomoredomains.club';\n\n\n//Функция обработки ответа от сервера\nconst handleResponse = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\n\n//Функция регистрация пользователя\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n    .then(handleResponse)\n};\n\n//Функция авторизация пользователя\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n    .then(handleResponse)\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n    .then(handleResponse)\n}\n","import '../index.css';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport React from 'react';\nimport { Route, Switch, Redirect, useHistory} from 'react-router-dom';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport Main from './Main';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoToolTip from './InfoTooltip';\nimport * as auth from '../utils/auth';\n\nfunction App() {\n  //константа для работы с useHistory\n  const history = useHistory();\n  //Создаём переменные состояния для попапов с помощью хуков\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  //Инициализируем стейт с карточками\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const [isRegisterPopupOpen, setIsRegisterPopupOpen] = React.useState(false);\n  const [isSuccessRegister, setIsSuccessRegister] = React.useState(false);\n\n\n\n\n  //При монтировании компонента вызовется этот хук\n  //В нём произведём запрос на сервер, чтобы получить новые данные\n  React.useEffect(() => {\n    //Производим запрос на сервер\n    Promise.all([\n      //Передаём Массив промисов, которые необходимо выполнить\n      //Ответ будет в массиве данных, по порядку написания промисов\n      //Но не по порядку их выполнения\n      api.getUserInformation(),\n      api.getInitialCards()\n    ])\n      .then(([userData, cardsList])=>{\n        //Попадаем сюда, только когда оба промиса будут выполнены\n        //Устанавливаем полученные данные пользователя\n        setCurrentUser(userData.data);\n        //Передаём карточки в стейт cards\n        setCards(cardsList.data.reverse());\n      })\n      .catch((err)=>{\n        console.log(err);\n      })\n  }, []);\n\n  //Проверяем есть ли токен в хранилище (делаем 1 раз при монтировании)\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n\n  //Обработчик постановки и удаления лайков\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => toString(i._id)  === toString(currentUser._id));\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard.data : c));\n      })\n      .catch(err => console.log(err));\n  }\n\n  //Обработчик удаления карточки\n  const handleCardDelete = (card) => {\n    api.removeCard(card._id).then(() => {\n      setCards((state) => state.filter((c) => c._id !== card._id))\n    })\n      .catch(err => console.log(err))\n  }\n\n\n  //Колбеки открытия поппов редактирования Аватара, профиля и добавления нового места\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  //Колбек для закрытия попапов\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsRegisterPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  //Колбек установки карточки для фул-вью попапа\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n\n  //Обработчик обновления данных пользователя\n  const handleUpdateUser = (userName, userAbout) => {\n    api.editProfile(userName, userAbout)\n      .then(userData => {\n        //Высталяем локально новые данные\n        setCurrentUser(userData.data);\n        //Закрываем попап\n        closeAllPopups();\n    })\n      .catch((err)=>{\n        console.log(err);\n    });\n  }\n\n  //Обработчик обновления аватары\n  const handleUpdateAvatar = (avatar) => {\n    api.editAvatar(avatar)\n      .then(userData => {\n        setCurrentUser(userData.data);\n        closeAllPopups();\n      })\n      .catch((err)=>{\n        console.log(err);\n    });\n  }\n\n  //Обработчик добавления карточки\n  const handleAddPlace = (place, link) => {\n    api.addCard(place, link)\n      .then(newCard => {\n        setCards([newCard.data, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err)=>{\n        console.log(err);\n      });\n  }\n\n  //Обработчики функциональных кнопок в header\n  const headerButtonHandlerSignIn = () => {\n    history.push('/sign-up')\n  }\n\n  const headerButtonHandlerSignUp = () => {\n    history.push('/sign-in')\n  }\n\n  const headerButtonHandlerMain = () => {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n    //Зануляем email при выходе\n    history.push('/sign-in');\n  }\n\n  //Функция проверки токена в локальном хранилище\n  const tokenCheck = () => {\n    //Получаем токен из локального хранилища\n    const jwt = localStorage.getItem('jwt');\n    //Если токен есть, то надо залогиниться\n    if (jwt) {\n      auth.checkToken(jwt).then((res) => {\n        if (res.data.email) {\n          setEmail(res.data.email);\n          setLoggedIn(true);\n          history.push('/');\n        }\n      })\n        .catch((err)=>{\n        console.log(err);\n      });\n    }\n  }\n\n  //Обработчик для залогинивания\n  const handleLogin = (password, email) => {\n    auth.authorize(password, email)\n      .then(data => {\n        //Проверяем, что в ответе есть токен\n        console.log('data в авторизации =', data)\n        if (data.token) {\n          localStorage.setItem('jwt', data.token);\n          console.log(\"token в хранилище=\", localStorage.getItem('jwt'))\n          setLoggedIn(true);\n          setEmail(email);\n          history.push('/');\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n\n  //Обработчик регистрации\n  const handleRegister = (password, email) => {\n    auth.register(password, email)\n      .then((data) => {\n          //Здесь должны показать попап\n          //Проверяем есть ли в ответе эмейл\n          if (data.data.email) {\n            //Выставляем стейты для попапа\n            setIsSuccessRegister(true);\n            setIsRegisterPopupOpen(true);\n          }\n          //Отправляем на страницу входа\n          history.push('/sign-in')\n        })\n      .catch(err => {\n        console.log(err)\n        //Если делать несколько регистраций подряд, то может быть неверное состояние стейта\n        //Поэтому принудительно выставляем его в false\n        setIsSuccessRegister(false);\n        setIsRegisterPopupOpen(true);\n      });\n  }\n\n  //Возвращаем разметку всей страницы\n  //Предварительно оборачваем все компоненты в провайдер контекста\n  //Чтобы во всех них был доступен контекст\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <Switch>\n            <Route path=\"/sign-up\">\n              <Register\n                headerHandler={headerButtonHandlerSignUp}\n                handlerRegister={handleRegister}\n              />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login\n                headerHandler={headerButtonHandlerSignIn}\n                handlerLogin={handleLogin}\n              />\n            </Route>\n            <ProtectedRoute exact path=\"/\"\n              loggedIn={loggedIn}\n              component={Main}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              cards={cards} onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              headerHandler={headerButtonHandlerMain}\n              email={email}\n            />\n            <Route path=\"*\">\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlace}\n          />\n          <PopupWithForm\n            name='delete'\n            title='Вы уверены?'\n            onClose={closeAllPopups}\n            buttonText={'Да'}\n          />\n          <ImagePopup\n            card={selectedCard}\n            onClose={closeAllPopups}\n          />\n          <InfoToolTip\n            isOpen={isRegisterPopupOpen}\n            onClose={closeAllPopups}\n            isSucces={isSuccessRegister}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}